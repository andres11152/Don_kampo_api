{"version":3,"file":"queries.interface.js","names":["queries","users","getUsers","getUsersById","getUserOrdersById","createUsers","updateUsers","updateUserStatus","deleteUsers","getUserByEmail","updateUserResetToken","verifyUserResetCode","updateUserPassword","customerTypes","getAllCustomerTypes","updateAllShippingCosts","orders","getOrders","getOrdersById","getOrderItemsByOrderId","getShippingInfoByOrderId","createOrder","updateOrders","updateOrderStatus","deleteOrders","createOrderItem","order_statuses","getOrderStatuses","getOrderStatusesById","createOrderStatuses","updateOrderStatuses","deleteOrderStatuses","shipping_statuses","getShippingStatuses","getShippingStatusesById","createShippingStatuses","updateShippingStatuses","deleteShippingStatuses","shipping_info","getShippingInfo","getShippingInfoById","createShippingInfo","updateShippingInfo","deleteShippingInfo","products","getProducts","getProductById","createProduct","createProductVariation","updateProduct","getProductVariations","deleteProduct","deleteProductVariation"],"sources":["../../src/database/queries.interface.js"],"sourcesContent":["export const queries = {\r\n  users: {\r\n    getUsers: \"SELECT * FROM users\",\r\n    getUsersById: \"SELECT * FROM users WHERE id = $1\",\r\n    getUserOrdersById: `\r\n      SELECT o.id AS order_id, o.order_date, o.status_id, o.total\r\n      FROM orders o\r\n      WHERE o.customer_id = $1\r\n    `,\r\n    createUsers: `\r\n      INSERT INTO users (user_name, lastname, email, phone, city, address, neighborhood, user_password , user_type)\r\n      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING id\r\n    `,\r\n    updateUsers: `\r\n      UPDATE users\r\n      SET \r\n        user_name = $1, \r\n        lastname = $2, \r\n        email = $3, \r\n        phone = $4, \r\n        city = $5, \r\n        address = $6, \r\n        neighborhood = $7, \r\n        user_password = $8, \r\n        user_type = $9\r\n      WHERE id = $10\r\n    `,\r\n    updateUserStatus: `\r\n      UPDATE users\r\n      SET status_id = $2\r\n      WHERE id = $1;\r\n    `,\r\n    deleteUsers: \"DELETE FROM users WHERE id = $1\",\r\n    getUserByEmail: 'SELECT id FROM users WHERE email = $1',\r\n    updateUserResetToken: `\r\n      UPDATE users \r\n      SET reset_password_token = $1, reset_password_expires = to_timestamp($2) \r\n      WHERE id = $3\r\n    `,\r\n    verifyUserResetCode: `\r\n      SELECT id \r\n      FROM users \r\n      WHERE email = $1 \r\n      AND reset_password_token = $2 \r\n      AND reset_password_expires > to_timestamp($3)\r\n    `,\r\n    updateUserPassword: `\r\n      UPDATE users \r\n      SET user_password = $1, reset_password_token = NULL, reset_password_expires = NULL \r\n      WHERE id = $2\r\n    `,\r\n  },\r\n  customerTypes: {\r\n    getAllCustomerTypes: `\r\n    SELECT * FROM customer_types;\r\n  `,\r\n  updateAllShippingCosts: `\r\n   UPDATE customer_types\r\n    SET shipping_cost = CASE \r\n      WHEN type_name = 'Hogar' THEN $1::numeric\r\n      WHEN type_name = 'Fruver' THEN $2::numeric\r\n      WHEN type_name = 'Supermercado' THEN $3::numeric\r\n      WHEN type_name = 'Restaurante' THEN $4::numeric\r\n  END;\r\n  `,\r\n  }, \r\n  orders: {\r\n    getOrders: `\r\n      SELECT \r\n        o.id, \r\n        o.customer_id, \r\n        o.order_date, \r\n        o.status_id, \r\n        o.total, \r\n        o.requires_electronic_billing, \r\n        o.company_name, \r\n        o.nit \r\n      FROM orders o\r\n    `,\r\n    getOrdersById: `\r\n      SELECT \r\n        o.id, \r\n        o.customer_id, \r\n        o.order_date, \r\n        o.status_id, \r\n        o.total, \r\n        o.requires_electronic_billing, \r\n        o.company_name, \r\n        o.nit,\r\n        u.user_name AS customer_name, \r\n        u.email AS customer_email\r\n      FROM orders o\r\n      LEFT JOIN users u ON o.customer_id = u.id\r\n      WHERE o.id = $1\r\n    `,\r\n    getOrderItemsByOrderId: `\r\n      SELECT \r\n        oi.order_id, \r\n        oi.product_id, \r\n        oi.quantity, \r\n        oi.price,\r\n        p.name AS product_name, \r\n        p.description AS product_description\r\n      FROM order_items oi\r\n      LEFT JOIN products p ON oi.product_id = p.product_id\r\n      WHERE oi.order_id = $1\r\n    `,\r\n    getShippingInfoByOrderId: `\r\n      SELECT \r\n        si.shipping_method, \r\n        si.tracking_number, \r\n        si.estimated_delivery,\r\n        si.actual_delivery, \r\n        si.shipping_status_id\r\n      FROM shipping_info si\r\n      WHERE si.order_id = $1\r\n    `,\r\n    createOrder: `\r\n      INSERT INTO orders (\r\n        customer_id, \r\n        order_date, \r\n        status_id, \r\n        total, \r\n        requires_electronic_billing, \r\n        company_name, \r\n        nit\r\n      ) \r\n      VALUES ($1, $2, $3, $4, $5, $6, $7) \r\n      RETURNING id\r\n    `,\r\n    updateOrders: `\r\n      UPDATE orders\r\n      SET \r\n        customer_id = $1, \r\n        order_date = $2, \r\n        status_id = $3, \r\n        total = $4, \r\n        needs_electronic_invoice = $5, \r\n        company_name = $6, \r\n        nit = $7\r\n      WHERE id = $8\r\n    `,\r\n    updateOrderStatus: `\r\n      UPDATE orders\r\n      SET status_id = $1\r\n      WHERE id = $2\r\n    `,\r\n    deleteOrders: `\r\n      DELETE FROM orders \r\n      WHERE id = $1\r\n    `,\r\n    createOrderItem: `\r\n      INSERT INTO order_items (\r\n        order_id, \r\n        product_id, \r\n        quantity, \r\n        price\r\n      ) \r\n      VALUES ($1, $2, $3, $4)\r\n    `  \r\n  },\r\n\r\n  order_statuses: {\r\n    getOrderStatuses: \"SELECT * FROM order_statuses\",\r\n    getOrderStatusesById: \"SELECT * FROM order_statuses WHERE id = $1\",\r\n    createOrderStatuses: `\r\n      INSERT INTO order_statuses (status_name)\r\n      VALUES ($1) RETURNING id\r\n    `,\r\n    updateOrderStatuses: `\r\n      UPDATE order_statuses\r\n      SET status_name = $1\r\n      WHERE id = $2\r\n    `,\r\n    deleteOrderStatuses: \"DELETE FROM order_statuses WHERE id = $1\",\r\n  },\r\n\r\n  shipping_statuses: {\r\n    getShippingStatuses: \"SELECT * FROM shipping_statuses\",\r\n    getShippingStatusesById: \"SELECT * FROM shipping_statuses WHERE id = $1\",\r\n    createShippingStatuses: `\r\n      INSERT INTO shipping_statuses (status_name)\r\n      VALUES ($1) RETURNING id\r\n    `,\r\n    updateShippingStatuses: `\r\n      UPDATE shipping_statuses\r\n      SET status_name = $1\r\n      WHERE id = $2\r\n    `,\r\n    deleteShippingStatuses: \"DELETE FROM shipping_statuses WHERE id = $1\",\r\n  },\r\n\r\n  shipping_info: {\r\n    getShippingInfo: \"SELECT * FROM shipping_info\",\r\n    getShippingInfoById: \"SELECT * FROM shipping_info WHERE id = $1\",\r\n    createShippingInfo: `\r\n      INSERT INTO shipping_info (shipping_method, tracking_number, estimated_delivery, actual_delivery, shipping_status_id, order_id)\r\n      VALUES ($1, $2, $3, $4, $5, $6) RETURNING shipping_info.id\r\n    `,\r\n    updateShippingInfo: `\r\n      UPDATE shipping_info\r\n      SET \r\n        shipping_method = $1, \r\n        tracking_number = $2, \r\n        estimated_delivery = $3, \r\n        actual_delivery = $4, \r\n        shipping_status_id = $5\r\n      WHERE id = $6\r\n    `,\r\n    deleteShippingInfo: \"DELETE FROM shipping_info WHERE id = $1\",\r\n  },\r\n  products: {\r\n    getProducts: `\r\n    SELECT \r\n      p.product_id, \r\n      p.name, \r\n      p.description, \r\n      p.category, \r\n      p.stock, \r\n      p.photo_url,\r\n      v.variation_id,\r\n      v.quality,\r\n      v.quantity,\r\n      v.price_home,\r\n      v.price_supermarket,\r\n      v.price_restaurant,\r\n      v.price_fruver\r\n    FROM products p\r\n    LEFT JOIN product_variations v ON p.product_id = v.product_id\r\n    ORDER BY p.created_at DESC\r\n    LIMIT $2 OFFSET $1;\r\n  `,\r\n  getProductById: `\r\n    SELECT \r\n      p.product_id, \r\n      p.name, \r\n      p.description, \r\n      p.category, \r\n      p.stock, \r\n      p.photo_url\r\n    FROM products p\r\n    WHERE p.product_id = $1;\r\n  `,\r\n\r\n  createProduct: `\r\n    INSERT INTO products (name, description, category, stock, photo_url)\r\n    VALUES ($1, $2, $3, $4, $5) RETURNING product_id;\r\n  `,\r\n\r\n  createProductVariation: `\r\n    INSERT INTO product_variations (product_id, quality, quantity, price_home, price_supermarket, price_restaurant, price_fruver)\r\n    VALUES ($1, $2, $3, $4, $5, $6, $7);\r\n  `,\r\n\r\n  updateProduct: `\r\n    UPDATE products\r\n    SET \r\n      name = $1, \r\n      description = $2, \r\n      category = $3, \r\n      stock = $4, \r\n      photo_url = COALESCE($5, photo_url), \r\n      updated_at = CURRENT_TIMESTAMP\r\n    WHERE product_id = $6\r\n    RETURNING product_id;\r\n  `,\r\n\r\n  getProductVariations: `\r\n    SELECT \r\n      v.variation_id, \r\n      v.quality, \r\n      v.quantity, \r\n      v.price_home, \r\n      v.price_supermarket, \r\n      v.price_restaurant, \r\n      v.price_fruver\r\n    FROM product_variations v\r\n    WHERE v.product_id = $1;\r\n  `,\r\n  deleteProduct: `\r\n    DELETE FROM products WHERE product_id = $1;\r\n  `,\r\n  deleteProductVariation: `\r\n    DELETE FROM product_variations WHERE product_id = $1;\r\n  `\r\n}\r\n};\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACrBC,KAAK,EAAE;IACLC,QAAQ,EAAE,qBAAqB;IAC/BC,YAAY,EAAE,mCAAmC;IACjDC,iBAAiB,EAAE;AACvB;AACA;AACA;AACA,KAAK;IACDC,WAAW,EAAE;AACjB;AACA;AACA,KAAK;IACDC,WAAW,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,gBAAgB,EAAE;AACtB;AACA;AACA;AACA,KAAK;IACDC,WAAW,EAAE,iCAAiC;IAC9CC,cAAc,EAAE,uCAAuC;IACvDC,oBAAoB,EAAE;AAC1B;AACA;AACA;AACA,KAAK;IACDC,mBAAmB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,kBAAkB,EAAE;AACxB;AACA;AACA;AACA;EACE,CAAC;EACDC,aAAa,EAAE;IACbC,mBAAmB,EAAE;AACzB;AACA,GAAG;IACDC,sBAAsB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC;EACDC,MAAM,EAAE;IACNC,SAAS,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,aAAa,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,sBAAsB,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,wBAAwB,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,WAAW,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,YAAY,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,iBAAiB,EAAE;AACvB;AACA;AACA;AACA,KAAK;IACDC,YAAY,EAAE;AAClB;AACA;AACA,KAAK;IACDC,eAAe,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC;EAEDC,cAAc,EAAE;IACdC,gBAAgB,EAAE,8BAA8B;IAChDC,oBAAoB,EAAE,4CAA4C;IAClEC,mBAAmB,EAAE;AACzB;AACA;AACA,KAAK;IACDC,mBAAmB,EAAE;AACzB;AACA;AACA;AACA,KAAK;IACDC,mBAAmB,EAAE;EACvB,CAAC;EAEDC,iBAAiB,EAAE;IACjBC,mBAAmB,EAAE,iCAAiC;IACtDC,uBAAuB,EAAE,+CAA+C;IACxEC,sBAAsB,EAAE;AAC5B;AACA;AACA,KAAK;IACDC,sBAAsB,EAAE;AAC5B;AACA;AACA;AACA,KAAK;IACDC,sBAAsB,EAAE;EAC1B,CAAC;EAEDC,aAAa,EAAE;IACbC,eAAe,EAAE,6BAA6B;IAC9CC,mBAAmB,EAAE,2CAA2C;IAChEC,kBAAkB,EAAE;AACxB;AACA;AACA,KAAK;IACDC,kBAAkB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,kBAAkB,EAAE;EACtB,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;IACDC,cAAc,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;IAEDC,aAAa,EAAE;AACjB;AACA;AACA,GAAG;IAEDC,sBAAsB,EAAE;AAC1B;AACA;AACA,GAAG;IAEDC,aAAa,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;IAEDC,oBAAoB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;IACDC,aAAa,EAAE;AACjB;AACA,GAAG;IACDC,sBAAsB,EAAE;AAC1B;AACA;EACA;AACA,CAAC","ignoreList":[]}