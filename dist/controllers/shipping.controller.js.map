{"version":3,"file":"shipping.controller.js","names":["_connection","require","_queriesInterface","createShippingInfo","req","res","shipping_method","tracking_number","estimated_delivery","actual_delivery","shipping_status_id","body","status","json","msg","client","getConnection","query","queries","shipping_info","order_id","release","error","console","exports","getShippingInfo","result","rows","getShippingInfoById","id","params","length","updateShippingInfo","rowCount","deleteShippingInfo"],"sources":["../../src/controllers/shipping.controller.js"],"sourcesContent":["// Importar el pool y las queries\r\nimport { getConnection } from \"../database/connection.js\";\r\nimport { queries } from \"../database/queries.interface.js\";\r\n\r\n// Crear nueva información de envío\r\nexport const createShippingInfo = async (req, res) => {\r\n  const {\r\n    shipping_method,\r\n    tracking_number,\r\n    estimated_delivery,\r\n    actual_delivery,\r\n    shipping_status_id,\r\n  } = req.body;\r\n\r\n  // Validación de campos obligatorios\r\n  if (!shipping_method || !shipping_status_id) {\r\n    return res.status(400).json({\r\n      msg: \"Faltan campos obligatorios: shipping_method o shipping_status_id.\",\r\n    });\r\n  }\r\n\r\n  try {\r\n    const client = await getConnection();\r\n    await client.query(queries.shipping_info.createShippingInfo, [\r\n      shipping_method,\r\n      tracking_number,\r\n      estimated_delivery,\r\n      actual_delivery,\r\n      shipping_status_id,\r\n      order_id\r\n    ]);\r\n\r\n    client.release();\r\n\r\n    return res.status(201).json({\r\n      msg: \"Información de envío creada con éxito\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error al crear la información de envío:\", error); // Log del error\r\n    return res.status(500).json({\r\n      msg: \"Error al crear la información de envío\",\r\n    });\r\n  }\r\n};\r\n\r\n// Obtener toda la información de envíos\r\nexport const getShippingInfo = async (req, res) => {\r\n  try {\r\n    const client = await getConnection();\r\n    const result = await client.query(queries.shipping_info.getShippingInfo);\r\n\r\n    client.release();\r\n\r\n    return res.status(200).json(result.rows);\r\n  } catch (error) {\r\n    console.error(\"Error al obtener la información de envíos:\", error);\r\n    return res.status(500).json({\r\n      msg: \"Error al obtener la información de envíos\",\r\n    });\r\n  }\r\n};\r\n\r\n// Obtener información de envío por ID\r\nexport const getShippingInfoById = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const client = await getConnection();\r\n    const result = await client.query(queries.shipping_info.getShippingInfoById, [\r\n      id,\r\n    ]);\r\n\r\n    client.release();\r\n\r\n    if (result.rows.length === 0) {\r\n      return res.status(404).json({ msg: \"Información de envío no encontrada\" });\r\n    }\r\n\r\n    return res.status(200).json(result.rows[0]);\r\n  } catch (error) {\r\n    console.error(\"Error al obtener la información de envío:\", error);\r\n    return res.status(500).json({\r\n      msg: \"Error al obtener la información de envío\",\r\n    });\r\n  }\r\n};\r\n\r\n// Actualizar información de envío\r\nexport const updateShippingInfo = async (req, res) => {\r\n  const { id } = req.params;\r\n  const {\r\n    shipping_method,\r\n    tracking_number,\r\n    estimated_delivery,\r\n    actual_delivery,\r\n    shipping_status_id,\r\n  } = req.body;\r\n\r\n  // Validación de campos obligatorios\r\n  if (!shipping_method || !shipping_status_id) {\r\n    return res.status(400).json({\r\n      msg: \"Faltan campos obligatorios: shipping_method o shipping_status_id.\",\r\n    });\r\n  }\r\n\r\n  try {\r\n    const client = await getConnection();\r\n    const result = await client.query(queries.shipping_info.updateShippingInfo, [\r\n      shipping_method,\r\n      tracking_number,\r\n      estimated_delivery,\r\n      actual_delivery,\r\n      shipping_status_id,\r\n      id,\r\n    ]);\r\n\r\n    client.release();\r\n\r\n    if (result.rowCount === 0) {\r\n      return res.status(404).json({ msg: \"Información de envío no encontrada\" });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      msg: \"Información de envío actualizada con éxito\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error al actualizar la información de envío:\", error);\r\n    return res.status(500).json({\r\n      msg: \"Error al actualizar la información de envío\",\r\n    });\r\n  }\r\n};\r\n\r\n// Eliminar información de envío\r\nexport const deleteShippingInfo = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const client = await getConnection();\r\n    const result = await client.query(queries.shipping_info.deleteShippingInfo, [\r\n      id,\r\n    ]);\r\n\r\n    client.release();\r\n\r\n    if (result.rowCount === 0) {\r\n      return res.status(404).json({ msg: \"Información de envío no encontrada\" });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      msg: \"Información de envío eliminada con éxito\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar la información de envío:\", error);\r\n    return res.status(500).json({\r\n      msg: \"Error al eliminar la información de envío\",\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]}