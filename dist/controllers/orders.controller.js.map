{"version":3,"file":"orders.controller.js","names":["getConnection","queries","crypto","placeOrder","_ref","_asyncToGenerator","req","res","userId","cartDetails","shippingMethod","estimatedDelivery","actualDelivery","total","userData","needsElectronicInvoice","companyName","companyNit","body","trackingNumber","randomBytes","toString","shippingStatusId","status","json","msg","client","userResult","query","rows","length","release","productIds","map","item","productId","productCheckResult","existingProductIds","row","product_id","invalidProducts","filter","id","includes","orderResult","orders","createOrder","Date","orderId","createOrderItem","quantity","price","shipping_info","createShippingInfo","error","console","_x","_x2","apply","arguments","getOrders","_ref2","result","_x3","_x4","getOrdersById","_ref3","params","orderData","itemsResult","getOrderItemsByOrderId","orderItems","shippingResult","getShippingInfoByOrderId","shippingInfo","order","items","_x5","_x6","createOrders","_ref4","customer_id","order_date","status_id","_x7","_x8","updateOrders","_ref5","_x9","_x10","updateOrderStatus","_ref6","_x11","_x12","deleteOrders","_ref7","orderCheck","rowCount","_x13","_x14"],"sources":["../../src/controllers/orders.controller.js"],"sourcesContent":["  import { getConnection } from '../database/connection.js';\r\n  import { queries } from '../database/queries.interface.js';\r\n  import crypto from 'crypto';\r\n  \r\n\r\n  export const placeOrder = async (req, res) => {\r\n    const { userId, cartDetails, shippingMethod, estimatedDelivery, actualDelivery, total, userData, needsElectronicInvoice, companyName, companyNit } = req.body;\r\n    const trackingNumber = crypto.randomBytes(5).toString('hex');\r\n    const shippingStatusId = 1;\r\n\r\n    if (!userId || !cartDetails || !total) {\r\n        return res.status(400).json({ msg: 'Información incompleta para procesar el pedido.' });\r\n    }\r\n\r\n    try {\r\n        const client = await getConnection();\r\n\r\n        const userResult = await client.query(\r\n            `SELECT id FROM users WHERE id = $1`,\r\n            [userId]\r\n        );\r\n\r\n        if (userResult.rows.length === 0) {\r\n            client.release();\r\n            return res.status(404).json({ msg: 'Usuario no encontrado.' });\r\n        }\r\n\r\n        const productIds = cartDetails.map((item) => item.productId);\r\n        const productCheckResult = await client.query(\r\n            `SELECT product_id FROM products WHERE product_id = ANY($1)`,\r\n            [productIds]\r\n        );\r\n\r\n        const existingProductIds = productCheckResult.rows.map((row) => row.product_id);\r\n        const invalidProducts = productIds.filter((id) => !existingProductIds.includes(id));\r\n\r\n        if (invalidProducts.length > 0) {\r\n            client.release();\r\n            return res.status(400).json({\r\n                msg: 'Algunos productos no existen en el catálogo.',\r\n                invalidProducts,\r\n            });\r\n        }\r\n\r\n        const orderResult = await client.query(queries.orders.createOrder, [\r\n            userId,\r\n            new Date(),\r\n            1, \r\n            total,\r\n            needsElectronicInvoice || false,\r\n            companyName || null,\r\n            companyNit || null,\r\n        ]);\r\n        const orderId = orderResult.rows[0].id;\r\n\r\n        for (const item of cartDetails) {\r\n            await client.query(queries.orders.createOrderItem, [\r\n                orderId,\r\n                item.productId,\r\n                item.quantity,\r\n                item.price,\r\n            ]);\r\n        }\r\n\r\n        if (shippingMethod && estimatedDelivery && actualDelivery) {\r\n            await client.query(queries.shipping_info.createShippingInfo, [\r\n                shippingMethod,\r\n                trackingNumber,\r\n                estimatedDelivery,\r\n                actualDelivery,\r\n                shippingStatusId,\r\n                orderId,\r\n            ]);\r\n        }\r\n\r\n        client.release();\r\n        res.status(201).json({ msg: 'Pedido realizado exitosamente.', orderId });\r\n    } catch (error) {\r\n        console.error('Error al realizar el pedido:', error);\r\n        res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n};\r\n\r\n\r\n  export const getOrders = async (req, res) => {\r\n    try {\r\n      const client = await getConnection();\r\n      const result = await client.query(queries.orders.getOrders);\r\n      client.release();\r\n      res.status(200).json(result.rows);\r\n    } catch (error) {\r\n      console.error('Error al obtener los pedidos:', error);\r\n      res.status(500).json({ msg: 'Error al obtener los pedidos.' });\r\n    }\r\n  };\r\n\r\n  export const getOrdersById = async (req, res) => {\r\n    try {\r\n      const { orderId } = req.params;\r\n      const client = await getConnection();\r\n\r\n\r\n      const orderResult = await client.query(queries.orders.getOrdersById, [orderId]);\r\n      if (orderResult.rows.length === 0) {\r\n        client.release();\r\n        return res.status(404).json({ msg: 'Pedido no encontrado.' });\r\n      }\r\n      const orderData = orderResult.rows[0];\r\n      const itemsResult = await client.query(queries.orders.getOrderItemsByOrderId, [orderId]);\r\n      const orderItems = itemsResult.rows;\r\n      const shippingResult = await client.query(queries.orders.getShippingInfoByOrderId, [orderId]);\r\n      const shippingInfo = shippingResult.rows.length > 0 ? shippingResult.rows[0] : null;\r\n\r\n      client.release();\r\n\r\n      res.status(200).json({\r\n        order: orderData,\r\n        items: orderItems,\r\n        shippingInfo,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al obtener el pedido:', error);\r\n      res.status(500).json({ msg: 'Error al obtener el pedido.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Crea un nuevo pedido.\r\n   */\r\n  export const createOrders = async (req, res) => {\r\n    const { customer_id, order_date, status_id, total } = req.body;\r\n\r\n    if (!customer_id || !order_date || !status_id || !total) {\r\n      return res.status(400).json({ msg: 'Campos obligatorios incompletos.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      await client.query(queries.orders.createOrder, [customer_id, order_date, status_id, total]);\r\n      client.release();\r\n      res.status(201).json({ msg: 'Pedido creado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al crear el pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza un pedido existente.\r\n   */\r\n  export const updateOrders = async (req, res) => {\r\n    const { id, customer_id, order_date, status_id, total } = req.body;\r\n\r\n    if (!id || !customer_id || !order_date || !status_id || !total) {\r\n      return res.status(400).json({ msg: 'Campos obligatorios incompletos.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      await client.query(queries.orders.updateOrders, [customer_id, order_date, status_id, total, id]);\r\n      client.release();\r\n      res.status(200).json({ msg: 'Pedido actualizado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al actualizar el pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza el estado de un pedido.\r\n   */\r\n  export const updateOrderStatus = async (req, res) => {\r\n    const { id, status_id } = req.params;\r\n\r\n    if (!id || !status_id) {\r\n      return res.status(400).json({ msg: 'ID de pedido o estado no proporcionado.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      await client.query(queries.orders.updateOrderStatus, [status_id, id]);\r\n      client.release();\r\n      res.status(200).json({ msg: 'Estado del pedido actualizado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al actualizar el estado del pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Elimina un pedido.\r\n   */\r\n  export const deleteOrders = async (req, res) => {\r\n    const { orderId } = req.params;\r\n\r\n    if (!orderId) {\r\n      return res.status(400).json({ msg: 'ID del pedido no proporcionado.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      const orderCheck = await client.query('SELECT id FROM orders WHERE id = $1', [orderId]);\r\n      if (orderCheck.rowCount === 0) {\r\n        client.release();\r\n        return res.status(404).json({ msg: 'Pedido no encontrado.' });\r\n      }\r\n\r\n      await client.query(queries.orders.deleteOrders, [orderId]);\r\n      client.release();\r\n      res.status(200).json({ msg: 'Pedido eliminado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al eliminar el pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n"],"mappings":"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","ignoreList":[]}