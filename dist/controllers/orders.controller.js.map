{"version":3,"file":"orders.controller.js","names":["_connection","require","_queriesInterface","_crypto","_interopRequireDefault","placeOrder","req","res","userId","cartDetails","shippingMethod","estimatedDelivery","actualDelivery","total","userData","needsElectronicInvoice","companyName","companyNit","body","trackingNumber","crypto","randomBytes","toString","shippingStatusId","status","json","msg","client","getConnection","userResult","query","rows","length","release","productIds","map","item","productId","productCheckResult","existingProductIds","row","product_id","invalidProducts","filter","id","includes","orderResult","queries","orders","createOrder","Date","orderId","createOrderItem","quantity","price","shipping_info","createShippingInfo","error","console","exports","getOrders","result","getOrdersById","params","orderData","itemsResult","getOrderItemsByOrderId","orderItems","shippingResult","getShippingInfoByOrderId","shippingInfo","order","items","createOrders","customer_id","order_date","status_id","updateOrders","updateOrderStatus","deleteOrders","orderCheck","rowCount"],"sources":["../../src/controllers/orders.controller.js"],"sourcesContent":["  import { getConnection } from '../database/connection.js';\r\n  import { queries } from '../database/queries.interface.js';\r\n  import crypto from 'crypto';\r\n  \r\n\r\n  export const placeOrder = async (req, res) => {\r\n    const { userId, cartDetails, shippingMethod, estimatedDelivery, actualDelivery, total, userData, needsElectronicInvoice, companyName, companyNit } = req.body;\r\n    const trackingNumber = crypto.randomBytes(5).toString('hex');\r\n    const shippingStatusId = 1;\r\n\r\n    if (!userId || !cartDetails || !total) {\r\n        return res.status(400).json({ msg: 'Información incompleta para procesar el pedido.' });\r\n    }\r\n\r\n    try {\r\n        const client = await getConnection();\r\n\r\n        const userResult = await client.query(\r\n            `SELECT id FROM users WHERE id = $1`,\r\n            [userId]\r\n        );\r\n\r\n        if (userResult.rows.length === 0) {\r\n            client.release();\r\n            return res.status(404).json({ msg: 'Usuario no encontrado.' });\r\n        }\r\n\r\n        const productIds = cartDetails.map((item) => item.productId);\r\n        const productCheckResult = await client.query(\r\n            `SELECT product_id FROM products WHERE product_id = ANY($1)`,\r\n            [productIds]\r\n        );\r\n\r\n        const existingProductIds = productCheckResult.rows.map((row) => row.product_id);\r\n        const invalidProducts = productIds.filter((id) => !existingProductIds.includes(id));\r\n\r\n        if (invalidProducts.length > 0) {\r\n            client.release();\r\n            return res.status(400).json({\r\n                msg: 'Algunos productos no existen en el catálogo.',\r\n                invalidProducts,\r\n            });\r\n        }\r\n\r\n        const orderResult = await client.query(queries.orders.createOrder, [\r\n            userId,\r\n            new Date(),\r\n            1, \r\n            total,\r\n            needsElectronicInvoice || false,\r\n            companyName || null,\r\n            companyNit || null,\r\n        ]);\r\n        const orderId = orderResult.rows[0].id;\r\n\r\n        for (const item of cartDetails) {\r\n            await client.query(queries.orders.createOrderItem, [\r\n                orderId,\r\n                item.productId,\r\n                item.quantity,\r\n                item.price,\r\n            ]);\r\n        }\r\n\r\n        if (shippingMethod && estimatedDelivery && actualDelivery) {\r\n            await client.query(queries.shipping_info.createShippingInfo, [\r\n                shippingMethod,\r\n                trackingNumber,\r\n                estimatedDelivery,\r\n                actualDelivery,\r\n                shippingStatusId,\r\n                orderId,\r\n            ]);\r\n        }\r\n\r\n        client.release();\r\n        res.status(201).json({ msg: 'Pedido realizado exitosamente.', orderId });\r\n    } catch (error) {\r\n        console.error('Error al realizar el pedido:', error);\r\n        res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n};\r\n\r\n\r\n  export const getOrders = async (req, res) => {\r\n    try {\r\n      const client = await getConnection();\r\n      const result = await client.query(queries.orders.getOrders);\r\n      client.release();\r\n      res.status(200).json(result.rows);\r\n    } catch (error) {\r\n      console.error('Error al obtener los pedidos:', error);\r\n      res.status(500).json({ msg: 'Error al obtener los pedidos.' });\r\n    }\r\n  };\r\n\r\n  export const getOrdersById = async (req, res) => {\r\n    try {\r\n      const { orderId } = req.params;\r\n      const client = await getConnection();\r\n\r\n\r\n      const orderResult = await client.query(queries.orders.getOrdersById, [orderId]);\r\n      if (orderResult.rows.length === 0) {\r\n        client.release();\r\n        return res.status(404).json({ msg: 'Pedido no encontrado.' });\r\n      }\r\n      const orderData = orderResult.rows[0];\r\n      const itemsResult = await client.query(queries.orders.getOrderItemsByOrderId, [orderId]);\r\n      const orderItems = itemsResult.rows;\r\n      const shippingResult = await client.query(queries.orders.getShippingInfoByOrderId, [orderId]);\r\n      const shippingInfo = shippingResult.rows.length > 0 ? shippingResult.rows[0] : null;\r\n\r\n      client.release();\r\n\r\n      res.status(200).json({\r\n        order: orderData,\r\n        items: orderItems,\r\n        shippingInfo,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error al obtener el pedido:', error);\r\n      res.status(500).json({ msg: 'Error al obtener el pedido.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Crea un nuevo pedido.\r\n   */\r\n  export const createOrders = async (req, res) => {\r\n    const { customer_id, order_date, status_id, total } = req.body;\r\n\r\n    if (!customer_id || !order_date || !status_id || !total) {\r\n      return res.status(400).json({ msg: 'Campos obligatorios incompletos.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      await client.query(queries.orders.createOrder, [customer_id, order_date, status_id, total]);\r\n      client.release();\r\n      res.status(201).json({ msg: 'Pedido creado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al crear el pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza un pedido existente.\r\n   */\r\n  export const updateOrders = async (req, res) => {\r\n    const { id, customer_id, order_date, status_id, total } = req.body;\r\n\r\n    if (!id || !customer_id || !order_date || !status_id || !total) {\r\n      return res.status(400).json({ msg: 'Campos obligatorios incompletos.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      await client.query(queries.orders.updateOrders, [customer_id, order_date, status_id, total, id]);\r\n      client.release();\r\n      res.status(200).json({ msg: 'Pedido actualizado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al actualizar el pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza el estado de un pedido.\r\n   */\r\n  export const updateOrderStatus = async (req, res) => {\r\n    const { id, status_id } = req.params;\r\n\r\n    if (!id || !status_id) {\r\n      return res.status(400).json({ msg: 'ID de pedido o estado no proporcionado.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      await client.query(queries.orders.updateOrderStatus, [status_id, id]);\r\n      client.release();\r\n      res.status(200).json({ msg: 'Estado del pedido actualizado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al actualizar el estado del pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Elimina un pedido.\r\n   */\r\n  export const deleteOrders = async (req, res) => {\r\n    const { orderId } = req.params;\r\n\r\n    if (!orderId) {\r\n      return res.status(400).json({ msg: 'ID del pedido no proporcionado.' });\r\n    }\r\n\r\n    try {\r\n      const client = await getConnection();\r\n      const orderCheck = await client.query('SELECT id FROM orders WHERE id = $1', [orderId]);\r\n      if (orderCheck.rowCount === 0) {\r\n        client.release();\r\n        return res.status(404).json({ msg: 'Pedido no encontrado.' });\r\n      }\r\n\r\n      await client.query(queries.orders.deleteOrders, [orderId]);\r\n      client.release();\r\n      res.status(200).json({ msg: 'Pedido eliminado exitosamente.' });\r\n    } catch (error) {\r\n      console.error('Error al eliminar el pedido:', error);\r\n      res.status(500).json({ msg: 'Error interno del servidor.' });\r\n    }\r\n  };\r\n"],"mappings":"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","ignoreList":[]}